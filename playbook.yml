---
- hosts: webservers
  vars:
    COOKIE_ENCRYPT_PWD: __COOKIE_ENCRYPT_PWD__
    HOST_URL: __HOST_URL__
    OKTA_CLIENT_ID: __OKTA_CLIENT_ID__
    OKTA_CLIENT_SECRET: __OKTA_CLIENT_SECRET__
    OKTA_ORG_URL: __OKTA_ORG_URL__
    PGHOST: __PGHOST__
    PGPASSWORD: __PGPASSWORD__
    PGPORT: __PGPORT__
    PGUSERNAME: __PGUSERNAME__
    PORT: __PORT__
    RESOURCE_GROUP: __RESOURCE_GROUP__
    admin_username: __admin_username__
    admin_password: __admin_password__
    
  tasks:
    - name: Get facts for all Public IPs within a resource groups
      azure_rm_publicipaddress_info:
        resource_group: "{{ RESOURCE_GROUP }}"
      register: output_ip_address

    - name: Get loadbalancer info
      azure_rm_loadbalancer_info:
        resource_group: "{{ RESOURCE_GROUP }}"
        name: "{{ loadbalancer_name }}"
      register: output

    - name: Add all hosts
      add_host:
        groups: scalesethosts
        hostname: "{{ output_ip_address.publicipaddresses[0].ip_address }}_{{ item.properties.frontendPort }}"
        ansible_host: "{{ output_ip_address.publicipaddresses[0].ip_address }}"
        ansible_port: "{{ item.properties.frontendPort }}"
        ansible_ssh_user: "{{ admin_username }}"
        ansible_ssh_pass: "{{ admin_password }}"
      with_items:
        - "{{ output.ansible_info.azure_loadbalancers[0].properties.inboundNatRules }}"

    - name: Install curl, git, zip, gzip packages
      become: yes
      apt:
        name: 
          - curl
          - git
          - zip
          - gzip
          
        update_cache: yes
      
    - name: Download NodeJS 14.X Source
      become: yes
      shell: curl -sL https://deb.nodesource.com/setup_14.x | sudo bash -
      
    - name: Install NodeJS 
      become: yes
      apt:
        name: nodejs
        state: present

    - name: Creates directory
      become: no
      file:
        path: ~/bootcamp-app/
        state: directory

    - name: unzip package
      ansible.builtin.unarchive:
        src: ~/agent/_work/WT.zip
        dest: ~/bootcamp-app/

    - name: Install WebApp JS Package
      ansible.builtin.shell:
        chdir: ~/bootcamp-app/WT
        cmd: npm install

    - name: Creating env file
      copy:
        dest: ~/bootcamp-app/WT/.env
        content: |
          # Host configuration
          PORT={{ PORT }}
          HOST=0.0.0.0
          NODE_ENV=development
          HOST_URL={{ HOST_URL }}
          COOKIE_ENCRYPT_PWD={{ COOKIE_ENCRYPT_PWD }}
          # Okta configuration
          OKTA_ORG_URL={{ OKTA_ORG_URL }}
          OKTA_CLIENT_ID={{ OKTA_CLIENT_ID }}
          OKTA_CLIENT_SECRET={{ OKTA_CLIENT_SECRET }}
          # Postgres configuration
          PGHOST={{ PGHOST }}
          PGUSERNAME=postgres
          PGDATABASE=postgres
          PGPASSWORD={{ PGPASSWORD }}
          PGPORT={{ PGPORT }}

    - name: Creates an entry in crontab
      ansible.builtin.cron:
        name: "run webapp"
        special_time: reboot
        job: "cd ~/bootcamp-app/WT/ && npm run dev"

      # In case you want to skip or play only this specific task
      tags:
         - cron

    # Sync & Init app with DB
    - name: Initalize App's Database
      ansible.builtin.shell:
        chdir: ~/bootcamp-app/WT
        cmd: npm run initdb

      # In case you want to skip or play only this specific task
      tags:
         - initdb

    - name: Reboot remote servers
      become: yes
      ansible.builtin.reboot:
        msg: "Reboot by Ansible"
        pre_reboot_delay: 2

      # In case you want to skip or play only this specific task
      tags:
         - reboot
